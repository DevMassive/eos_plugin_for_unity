### YamlMime:ManagedReference
items:
- uid: PlayEveryWare.EpicOnlineServices.EmptyPredicates
  commentId: T:PlayEveryWare.EpicOnlineServices.EmptyPredicates
  id: EmptyPredicates
  parent: PlayEveryWare.EpicOnlineServices
  children:
  - PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrContainsOnlyEmpty(System.Collections.Generic.List{System.String})
  - PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrNull(PlayEveryWare.EpicOnlineServices.IEmpty)
  - PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrNull(System.Nullable{System.Boolean})
  - PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrNull(System.String)
  - PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrNull``1(System.Collections.Generic.List{``0})
  - PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrNullOrContainsOnlyEmpty(System.Collections.Generic.List{System.String})
  - PlayEveryWare.EpicOnlineServices.EmptyPredicates.NewIfNull(System.String)
  - PlayEveryWare.EpicOnlineServices.EmptyPredicates.NewIfNull``1(``0)
  langs:
  - csharp
  - vb
  name: EmptyPredicates
  nameWithType: EmptyPredicates
  fullName: PlayEveryWare.EpicOnlineServices.EmptyPredicates
  type: Class
  source:
    id: EmptyPredicates
    path: ''
    startLine: 2284
  assemblies:
  - cs.temp.dll
  namespace: PlayEveryWare.EpicOnlineServices
  syntax:
    content: public static class EmptyPredicates
    content.vb: Public Module EmptyPredicates
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrNull(System.String)
  commentId: M:PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrNull(System.String)
  id: IsEmptyOrNull(System.String)
  parent: PlayEveryWare.EpicOnlineServices.EmptyPredicates
  langs:
  - csharp
  - vb
  name: IsEmptyOrNull(String)
  nameWithType: EmptyPredicates.IsEmptyOrNull(String)
  fullName: PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrNull(System.String)
  type: Method
  source:
    id: IsEmptyOrNull
    path: ''
    startLine: 2286
  assemblies:
  - cs.temp.dll
  namespace: PlayEveryWare.EpicOnlineServices
  syntax:
    content: public static bool IsEmptyOrNull(string s)
    parameters:
    - id: s
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsEmptyOrNull(s As String) As Boolean
  overload: PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrNull*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrNull(System.Nullable{System.Boolean})
  commentId: M:PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrNull(System.Nullable{System.Boolean})
  id: IsEmptyOrNull(System.Nullable{System.Boolean})
  parent: PlayEveryWare.EpicOnlineServices.EmptyPredicates
  langs:
  - csharp
  - vb
  name: IsEmptyOrNull(Nullable<Boolean>)
  nameWithType: EmptyPredicates.IsEmptyOrNull(Nullable<Boolean>)
  fullName: PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrNull(System.Nullable<System.Boolean>)
  type: Method
  source:
    id: IsEmptyOrNull
    path: ''
    startLine: 2291
  assemblies:
  - cs.temp.dll
  namespace: PlayEveryWare.EpicOnlineServices
  syntax:
    content: public static bool IsEmptyOrNull(bool? b)
    parameters:
    - id: b
      type: System.Nullable{System.Boolean}
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsEmptyOrNull(b As Boolean?) As Boolean
  overload: PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrNull*
  nameWithType.vb: EmptyPredicates.IsEmptyOrNull(Nullable(Of Boolean))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrNull(System.Nullable(Of System.Boolean))
  name.vb: IsEmptyOrNull(Nullable(Of Boolean))
- uid: PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrNull``1(System.Collections.Generic.List{``0})
  commentId: M:PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrNull``1(System.Collections.Generic.List{``0})
  id: IsEmptyOrNull``1(System.Collections.Generic.List{``0})
  parent: PlayEveryWare.EpicOnlineServices.EmptyPredicates
  langs:
  - csharp
  - vb
  name: IsEmptyOrNull<T>(List<T>)
  nameWithType: EmptyPredicates.IsEmptyOrNull<T>(List<T>)
  fullName: PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrNull<T>(System.Collections.Generic.List<T>)
  type: Method
  source:
    id: IsEmptyOrNull
    path: ''
    startLine: 2296
  assemblies:
  - cs.temp.dll
  namespace: PlayEveryWare.EpicOnlineServices
  syntax:
    content: public static bool IsEmptyOrNull<T>(List<T> list)
    parameters:
    - id: list
      type: System.Collections.Generic.List{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsEmptyOrNull(Of T)(list As List(Of T)) As Boolean
  overload: PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrNull*
  nameWithType.vb: EmptyPredicates.IsEmptyOrNull(Of T)(List(Of T))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrNull(Of T)(System.Collections.Generic.List(Of T))
  name.vb: IsEmptyOrNull(Of T)(List(Of T))
- uid: PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrNull(PlayEveryWare.EpicOnlineServices.IEmpty)
  commentId: M:PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrNull(PlayEveryWare.EpicOnlineServices.IEmpty)
  id: IsEmptyOrNull(PlayEveryWare.EpicOnlineServices.IEmpty)
  parent: PlayEveryWare.EpicOnlineServices.EmptyPredicates
  langs:
  - csharp
  - vb
  name: IsEmptyOrNull(IEmpty)
  nameWithType: EmptyPredicates.IsEmptyOrNull(IEmpty)
  fullName: PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrNull(PlayEveryWare.EpicOnlineServices.IEmpty)
  type: Method
  source:
    id: IsEmptyOrNull
    path: ''
    startLine: 2301
  assemblies:
  - cs.temp.dll
  namespace: PlayEveryWare.EpicOnlineServices
  syntax:
    content: public static bool IsEmptyOrNull(IEmpty o)
    parameters:
    - id: o
      type: PlayEveryWare.EpicOnlineServices.IEmpty
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsEmptyOrNull(o As IEmpty) As Boolean
  overload: PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrNull*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrNullOrContainsOnlyEmpty(System.Collections.Generic.List{System.String})
  commentId: M:PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrNullOrContainsOnlyEmpty(System.Collections.Generic.List{System.String})
  id: IsEmptyOrNullOrContainsOnlyEmpty(System.Collections.Generic.List{System.String})
  parent: PlayEveryWare.EpicOnlineServices.EmptyPredicates
  langs:
  - csharp
  - vb
  name: IsEmptyOrNullOrContainsOnlyEmpty(List<String>)
  nameWithType: EmptyPredicates.IsEmptyOrNullOrContainsOnlyEmpty(List<String>)
  fullName: PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrNullOrContainsOnlyEmpty(System.Collections.Generic.List<System.String>)
  type: Method
  source:
    id: IsEmptyOrNullOrContainsOnlyEmpty
    path: ''
    startLine: 2306
  assemblies:
  - cs.temp.dll
  namespace: PlayEveryWare.EpicOnlineServices
  syntax:
    content: public static bool IsEmptyOrNullOrContainsOnlyEmpty(List<string> list)
    parameters:
    - id: list
      type: System.Collections.Generic.List{System.String}
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsEmptyOrNullOrContainsOnlyEmpty(list As List(Of String)) As Boolean
  overload: PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrNullOrContainsOnlyEmpty*
  nameWithType.vb: EmptyPredicates.IsEmptyOrNullOrContainsOnlyEmpty(List(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrNullOrContainsOnlyEmpty(System.Collections.Generic.List(Of System.String))
  name.vb: IsEmptyOrNullOrContainsOnlyEmpty(List(Of String))
- uid: PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrContainsOnlyEmpty(System.Collections.Generic.List{System.String})
  commentId: M:PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrContainsOnlyEmpty(System.Collections.Generic.List{System.String})
  id: IsEmptyOrContainsOnlyEmpty(System.Collections.Generic.List{System.String})
  parent: PlayEveryWare.EpicOnlineServices.EmptyPredicates
  langs:
  - csharp
  - vb
  name: IsEmptyOrContainsOnlyEmpty(List<String>)
  nameWithType: EmptyPredicates.IsEmptyOrContainsOnlyEmpty(List<String>)
  fullName: PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrContainsOnlyEmpty(System.Collections.Generic.List<System.String>)
  type: Method
  source:
    id: IsEmptyOrContainsOnlyEmpty
    path: ''
    startLine: 2311
  assemblies:
  - cs.temp.dll
  namespace: PlayEveryWare.EpicOnlineServices
  syntax:
    content: public static bool IsEmptyOrContainsOnlyEmpty(List<string> list)
    parameters:
    - id: list
      type: System.Collections.Generic.List{System.String}
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsEmptyOrContainsOnlyEmpty(list As List(Of String)) As Boolean
  overload: PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrContainsOnlyEmpty*
  nameWithType.vb: EmptyPredicates.IsEmptyOrContainsOnlyEmpty(List(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrContainsOnlyEmpty(System.Collections.Generic.List(Of System.String))
  name.vb: IsEmptyOrContainsOnlyEmpty(List(Of String))
- uid: PlayEveryWare.EpicOnlineServices.EmptyPredicates.NewIfNull``1(``0)
  commentId: M:PlayEveryWare.EpicOnlineServices.EmptyPredicates.NewIfNull``1(``0)
  id: NewIfNull``1(``0)
  parent: PlayEveryWare.EpicOnlineServices.EmptyPredicates
  langs:
  - csharp
  - vb
  name: NewIfNull<T>(T)
  nameWithType: EmptyPredicates.NewIfNull<T>(T)
  fullName: PlayEveryWare.EpicOnlineServices.EmptyPredicates.NewIfNull<T>(T)
  type: Method
  source:
    id: NewIfNull
    path: ''
    startLine: 2316
  assemblies:
  - cs.temp.dll
  namespace: PlayEveryWare.EpicOnlineServices
  syntax:
    content: >-
      public static T NewIfNull<T>(T value)
          where T : new()
    parameters:
    - id: value
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function NewIfNull(Of T As New)(value As T) As T
  overload: PlayEveryWare.EpicOnlineServices.EmptyPredicates.NewIfNull*
  nameWithType.vb: EmptyPredicates.NewIfNull(Of T)(T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: PlayEveryWare.EpicOnlineServices.EmptyPredicates.NewIfNull(Of T)(T)
  name.vb: NewIfNull(Of T)(T)
- uid: PlayEveryWare.EpicOnlineServices.EmptyPredicates.NewIfNull(System.String)
  commentId: M:PlayEveryWare.EpicOnlineServices.EmptyPredicates.NewIfNull(System.String)
  id: NewIfNull(System.String)
  parent: PlayEveryWare.EpicOnlineServices.EmptyPredicates
  langs:
  - csharp
  - vb
  name: NewIfNull(String)
  nameWithType: EmptyPredicates.NewIfNull(String)
  fullName: PlayEveryWare.EpicOnlineServices.EmptyPredicates.NewIfNull(System.String)
  type: Method
  source:
    id: NewIfNull
    path: ''
    startLine: 2325
  assemblies:
  - cs.temp.dll
  namespace: PlayEveryWare.EpicOnlineServices
  syntax:
    content: public static string NewIfNull(string value)
    parameters:
    - id: value
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function NewIfNull(value As String) As String
  overload: PlayEveryWare.EpicOnlineServices.EmptyPredicates.NewIfNull*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: PlayEveryWare.EpicOnlineServices
  commentId: N:PlayEveryWare.EpicOnlineServices
  name: PlayEveryWare.EpicOnlineServices
  nameWithType: PlayEveryWare.EpicOnlineServices
  fullName: PlayEveryWare.EpicOnlineServices
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrNull*
  commentId: Overload:PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrNull
  name: IsEmptyOrNull
  nameWithType: EmptyPredicates.IsEmptyOrNull
  fullName: PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrNull
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{{T}}
  commentId: T:System.Collections.Generic.List{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: PlayEveryWare.EpicOnlineServices.IEmpty
  commentId: T:PlayEveryWare.EpicOnlineServices.IEmpty
  parent: PlayEveryWare.EpicOnlineServices
  name: IEmpty
  nameWithType: IEmpty
  fullName: PlayEveryWare.EpicOnlineServices.IEmpty
- uid: PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrNullOrContainsOnlyEmpty*
  commentId: Overload:PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrNullOrContainsOnlyEmpty
  name: IsEmptyOrNullOrContainsOnlyEmpty
  nameWithType: EmptyPredicates.IsEmptyOrNullOrContainsOnlyEmpty
  fullName: PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrNullOrContainsOnlyEmpty
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrContainsOnlyEmpty*
  commentId: Overload:PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrContainsOnlyEmpty
  name: IsEmptyOrContainsOnlyEmpty
  nameWithType: EmptyPredicates.IsEmptyOrContainsOnlyEmpty
  fullName: PlayEveryWare.EpicOnlineServices.EmptyPredicates.IsEmptyOrContainsOnlyEmpty
- uid: PlayEveryWare.EpicOnlineServices.EmptyPredicates.NewIfNull*
  commentId: Overload:PlayEveryWare.EpicOnlineServices.EmptyPredicates.NewIfNull
  name: NewIfNull
  nameWithType: EmptyPredicates.NewIfNull
  fullName: PlayEveryWare.EpicOnlineServices.EmptyPredicates.NewIfNull
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
